---
layout: post
title:  "IoT-Ep3 | Hiển thị và phân tích dữ liệu trên Thingspeak"
date:   2022-03-12 00:00:00 +0300
category: Tech
image: /tech-blog/assets/ThingspeakAccount.png
tags: [IoT, Thingspeak]
---
Trong bài viết này, chúng ta sẽ tìm hiểu các tính năng điều chỉnh biểu đồ dữ liệu và sử dụng ngôn ngữ Matlab để viết các script xử lý dữ liệu trên Thingspeak. Các bạn có thể theo dõi video-demo hoặc bài hướng dẫn dưới đây.

<p align="center">
<iframe width="560" height="315" src="https://www.youtube.com/embed/Xu68phWUE6Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</p>

# Mục lục
1. [Giới thiệu](#Section1)
2. [Điều chỉnh đồ thị](#Section2)
3. [Các ứng dụng Apps](#Section3)
4. [Tạo biểu đồ phân bố](#Section4)
5. [Thêm đồng hồ đo](#Section5)
6. [Kết luận](#Section6)
7. [Tài liệu tham khảo](#Section7)

## 1. Giới thiệu <a name="Section1"></a>
Ở bài viết IoT-Ep2 trước chúng ta đã xem cách tạo kênh trên Thingspeak để lưu trữ dữ liệu nhiệt độ và độ ẩm thu được từ cảm biến DHT22. Với dữ liệu gửi lên từ mô-đun NodeMCU, chúng ta có được 2 biểu đồ nhiệt độ và độ ẩm theo thời gian.
Trong bài viết này, chúng ta cùng xem một số tính năng trên Thingspeak, ví dụ như:
- Điều chỉnh hiển thị đồ thị.
- Thêm các loại biểu đồ phân tích khác.
- Và tìm hiểu các Apps được Thingspeak hỗ trợ.

## 2. Điều chỉnh đồ thị <a name="Section2"></a>
Với mỗi đồ thị dữ liệu từ các trường dữ liệu, Thingspeak cho phép chúng ta có thể điều chỉnh hiển thị ngay trên Website. Để mở cửa sổ tuỳ chỉnh đồ thị, chúng ta nhấn vào biểu tượng chiếc bút ở trên cửa sổ đồ thị (Hình 1).
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/EditBieuDo.png" style="zoom:50%">
  <br>
    <em>Hình 1. Chọn điều chỉnh biểu đồ</em>
</p>

Sau khi có được cửa sổ tuỳ chỉnh (Hình 2), chúng ta có thể điền các thông tin và tuỳ chỉnh đồ thị. Ví dụ cho biểu đồ nhiệt độ, tiêu đề có thể là **Đồ thị nhiệt độ**. Tiếp theo, chúng ta cũng có thể thay đổi tên các trục **Ox** - **Thời gian** và **Oy** - **Nhiệt độ, °C**. Trong phần tuỳ biến, chúng ta cũng có thể tuỳ chỉnh để hiển thị giá trị trung bình hoặc tổng các giá trị trong khoảng thời gian xem xét. Ngoài ra, chúng ta cũng chọn khoảng giá trị nhiệt độ từ 0 tới 60.
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/FieldOptions.png" style="zoom:40%">
  <br>
    <em>Hình 2. Lựa chọn tuỳ chỉnh hiển thị đồ thị</em>
</p>

Tương tự với đồ thị độ ẩm, chúng ta nhận được như Hình 3 sau khi điều chỉnh.
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/DoThi.png" style="zoom:40%">
  <br>
    <em>Hình 2. Đồ thị nhiệt độ và độ ẩm</em>
</p>

### 3. Các ứng dụng Apps<a name="Section3"></a>
Ngoài ra, Thingspeak còn hỗ trợ chúng ta tạo ra các ứng dụng khác nhau (Hình 3).
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/ThingspeakApps.png" style="zoom:40%">
  <br>
    <em>Hình 3. Các Apps được Thingspeak hỗ trợ</em>
</p>

Các Apps được Thingspeak chia thành 2 nhóm (Hình 4): Phân tích (Analytics) và Hành động (Actions):
- Nhóm ứng dụng Analytics cho phép ta viết script Matlab để phân tích và vẽ đồ thị, trong nhóm này Thingspeak cũng cho phép tạo ra các plugins được viết với HTML, CSS và Javascript dành cho hiển thị Web.
- Nhóm Actions cho phép tạo ra các lệnh request giúp ta liên kết với các ứng dụng khác như Twitter, hay chỉ đơn giản là một lệnh HTTP request cho ta điều khiển thiết bị từ xa.
- Matlab Analysis cho phép chúng ta thực thi code bằng ngôn ngữ Matlab trực tiếp trên Cloud. Sử dụng Matlab, chúng ta có thể phân tích, xử lý dữ liệu cảm biến, và xây dựng các mô hình phân tích dữ liệu. Các script Matlab được liên kết với nhóm Actions, từ đây chúng ta có thể cài tần số script được gọi để thực thi, hoặc được thực thi khi nhận được request.
- Matlab Visualization cho phép ta sử dụng Matlab để vẽ các biểu đồ hay đồ thị dữ liệu.
- Sử dụng các Plugins, chúng ta có thể tạo ra các biểu đồ bằng HTML, CSS và Javascirpt. Từ đó bạn có thể nhúng bất kì Plugin nào vào trang Web của bạn.
- ThingTweet giúp liên kết thiết bị tới tài khoản Twitter và cho phép gửi tin nhắn cảnh báo.
- TimeControl cho phép chúng ta cài đặt thời gian thực hiện các câu lệnh với Matlab Analysis, ThingTweet và TalkBack.
- React và TalkBack giúp ta tạo ra các logic hành động dựa trên trên dữ liệu đầu vào thu được.
- Cuối cùng là ThingHTTP cho phép chúng ta tạo kênh giao tiếp giữa các thiết bị, trang web và dịch vụ web mà không cần phải triển khai giao thức ở cấp thiết bị.  Ở đây chúng ta có thể liên kết với các Actions bằng cách sử dụng các ứng dụng ThingSpeak khác như TweetControl, TimeControl và React.
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/ThingspeakApps2.png" style="zoom:50%">
  <br>
    <em>Hình 4. Nhóm Analytics và Actions</em>
</p>

### 4. Tạo biểu đồ phân bố <a name="Section5"></a>
Trở lại với **private view** của kênh, chúng ta sẽ sử dụng **Matlab Visualization** để vẽ các biểu đồ phân bố nhiệt độ và độ ẩm. Để tạo biểu đồ phân bố, chúng ta sẽ vào phần **Matlab Visualization** (Hình 5) và chọn mẫu code để vẽ histogram (Hình 6).
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization.png" style="zoom:50%">
  <br>
    <em>Hình 5. Chọn Matlab Visualization</em>
</p>

<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization2.png" style="zoom:40%">
  <br>
    <em>Hình 6. Tạo biểu đồ phân bố</em>
</p>

Sau khi nhấn chọn **Create**, chúng ta có được cửa sổ viết Matlab Code (Hình 7). Trong script này, chúng ta có thể đặt tên **Phân bố nhiệt độ**, và chúng ta cũng cần tới **Channel ID**, **Read API Key**, **fieldID**. Ở bên phải của màn hình chúng ta có thông tin của **Channel**, để chương trình có thể truy cập truy xuất và lưu trữ dữ liệu. Ngoài ra, trong phần **Display Settings**, chúng ta có thể chọn hiển thị biểu đồ ở kênh nào và hiển thị ở dạng *Public* hoặc *Private*.
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization3.png" style="zoom:50%">
  <br>
    <em>Hình 7. Chỉnh sửa Matlab Code</em>
</p>

Sau khi nhấn **Save and Rung**, biểu đồ được hiển thị ngay dưới Matlab Code (Hình 8).
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization4.png" style="zoom:30%">
  <br>
    <em>Hình 8. Chạy Matlab Code</em>
</p>

### 5. Thêm đồng hồ đo
Tiếp theo, để tạo đồng hồ hiển thị nhiệt độ, chúng ta có thể thêm bằng cách vào phần **Add Widgets**, và chọn mẫu hiển thị đồng hồ **Gauge** (Hình 9-11).
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization5.png" style="zoom:30%">
  <br>
    <em>Hình 9. Thêm Widgets</em>
</p>
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization6.png" style="zoom:30%">
  <br>
    <em>Hình 10. Tạo đồng hồ Gauge</em>
</p>
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization7.png" style="zoom:30%">
  <br>
    <em>Hình 11. Tuỳ chỉnh Widgets</em>
</p>

Tới đây, **Private view** sẽ cho chúng ta thấy được biểu đồ phân bố và đồng hồ cho giá trị nhiệt độ (Hình 12).
<p align="center">
  <img alt="Edit bieu do" src="/tech-blog/assets/MatlabVisualization8.png" style="zoom:30%">
  <br>
    <em>Hình 12. Biểu đồ phân bố và đồng hồ nhiệt độ</em>
</p>

### 6. Kết luận
Có thể thấy rằng, việc sử dụng Matlab giúp chúng ta dễ dàng tuỳ biến trong việc phân tích và xử lý dữ liệu, cũng như vẽ các đồ thị dữ liệu.
Hiện nay, Matlab là một trong những nền tảng và ngôn ngữ phổ biến cho các ứng dụng tính toán, và được sử dụng trong nhiều lĩnh vực khác nhau. Ngoài ra, sử dụng Matlab cũng cho phép tạo ra có mô hình học máy hay mạng nơ-ron để dự đoán sự thay đổi của dữ liệu trong tương lai.
Hơn nữa, chúng ta cũng có thể thấy rằng việc vẽ và tuỳ biến đồ thị cũng được hỗ trợ dễ dàng trên Thingspeak, và cho phép tích hợp vào trang web khác một cách dễ dàng.

### 7. Tài liệu tham khảo <a name="Section6"></a>
- Adruino IDE: [https://www.arduino.cc](https://www.arduino.cc/){:target="_blank"}
- ESP8266-Arduino: [https://github.com/esp8266/Arduino](https://github.com/esp8266/Arduino){:target="_blank"}
- DHT Sensor Library: [https://github.com/adafruit/DHT-sensor-library](https://github.com/adafruit/DHT-sensor-library){:target="_blank"}